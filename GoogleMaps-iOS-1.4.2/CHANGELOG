Version 1.4.2 - August 2013
===========================
Resolved Issues:
  - Fixed a rare case where modifying an animated marker could cause 'ghost'
    markers to appear
  - Prioritized markers over other overlays for tappability

Version 1.4.1 - August 2013
===========================
Features:
  - Tappable markers inside GMSPanoramaView using the
    panoramaView:didTapMarker: delegate method on GMSPanoramaViewDelegate
  - Added GMSPanoramaLayer, a custom CALayer subclass for GMSPanoramaView that
    supports animation of the panorama camera
  - GMSPanoramaCamera supports custom field of view (FOV)
  - Programmatic access to the floor picker allows you to enable or disable the
    selector, and set which floor should be displayed
  - GMSTileLayer now supports high DPI tiles, for use on a Retina device
  - GMSMapView.camera is now observable via KVO
  - Added fitBounds:withEdgeInsets: to GMSCameraUpdate
  - The default behavior of a GMSMapView to consume all gestures within its
    bounds may now be disabled via consumesGesturesInView
  - Expanded GMSGeometryUtils to include additional helper methods
  - GMSServices may be held by applications to maintain cache and connection to
    Google; this can improve performance when creating and destroying many maps
  - Improved visuals when resizing a GMSMapView via UIView animation methods

Resolved Issues:
  - Fixed crash bug during memory warning (related to indoor)
  - Fixed crash bug with indoor maps on iOS 5.1
  - Performance improvements when using hundreds of GMSMarkers
  - Reduced memory footprint of GMSMapView
  - Touch target for GMSMarkers matches the size and shape of the marker when
    the GMSMapView is tilted
  - GMSMapView will no longer render a single frame of black in some cases
    (noticable e.g., inside UISplitViewController on iPad)
  - Street View imagery is now adjusted correctly for tilted base data
    (e.g., data taken by a Street View car on a slope)
  - Geodesic interpolation has been tweaked to be more correct
  - Fixed incorrect GMSGroundOverlay sizing (regression in 1.4.0)
  - fitBounds:withPadding: on GMSCameraUpdate now correctly applies padding to
    all edges of the bounds; previously it used 1/2 padding on each edge

Version 1.4.0 - July 2013
=========================
Features:
  - Support for Google Street View imagery, with coverage in 50+ countries
    * Added GMSPanoramaView, a viewer for Street View imagery, that enables
      both programmatic and user control
    * GMSMarkers can be shared between GMSMapView and GMSPanoramaView
    * GMSPanoramaService may be used to load panorama data ahead of display
  - Indoor floor plans and a floor selector control will now be displayed when
    available
  - Updated map design inspired by the new Google Maps
  - Info windows now show at 1:1 resolution on the screen regardless of tilt
  - Additional delegate methods on GMSMapView - mapView:willMove: and
    mapView:idleAtCameraPosition: - allow you to detect the start and
    end of camera movement, respectively
  - An improved look and feel for polylines and polygon stroke
  - Added a zIndex property on all overlays; z-indexes are calculated in two
    groups: GMSMarkers and all other overlays
  - Added GMSGeometryUtils methods for heading, distance, offset etc. with
    respect to points on the Earth

Resolved Issues:
  - Improved the tappability of GMSPolygon
  - The compass now disappears when the map returns to zero bearing for any
    reason, including animation
  - Resolved crash issue when creating a zero-sized GMSPolygon
  - Resolved an issue where active gestures could cause a GMSMapView to not
    be released until deceleration completed
  - Info windows no longer allow taps to pass through them
  ! Accessibility elements on GMSMapView are now hidden by default; you can
    enable via accessibilityElementsHidden

Notes:
  ! To align with other Google Maps APIs, GMSGroundOverlay no longer supports
    the zoomLevel property. You can use the helper method
    groundOverlayWithPosition:icon:zoomLevel: to migrate existing code

Version 1.3.1 - June 2013
=========================
Resolved Issues:
  - Shows all tiles when animating across the antimeridian
  - Performance improvements while zooming
  - Touches are consumed more agressively by GMSMapView
  - Fixed constructing a GMSMutablePath via pathFromEncodedPath:
  - Restores OpenGL state correctly in GMSMapView in applications that also use
    GLKView

Version 1.3.0 - May 2013
========================
Features:
  - Support for custom tile overlays (image-based) via GMSTileLayer
  - Anti-aliasing for GMSPolyline and GMSPolygon stroke
  - Support for 'invisiecle' base map tiles via kGMSTypeNone 
  - Basic support for CAAnimationGroup on GMSMapLayer

Resolved Issues:
  - Performance improvements with large numbers of overlays
  - Resolved excessive memory use when device was locked/unlocked while an info
    window was displayed
  - Animations are stopped when a user performs a gesture
  - Animations stop any active gesture (e.g., a pan)
  - Resolved crash issue with setting/clearing My Location dot.
  - GMSPolyline and GMSPolygon now support greater precision at high zoom
  - GMSPolyline and GMSPolygon use the correct alpha values
  - Touches are consumed by GMSMapView, allowing use within e.g. a scroll view

Version 1.2.2 - April 2013
==========================
Resolved Issues:
  - Tappable regions for GMSMarker fixed.
  - Overlays are no longer able to render on half pixels.
  - Ground overlays appear underneath the My Location dot.
  - GMSPolyline 'strokeColor' is no longer erroneously deallocated.

Version 1.2.0 - April 2013
==========================
Features:
  ! Removed GMS...Options classes in favor of creating overlays directly
    and setting their 'map' property
  ! Map overlays (GMSMarker, GMSPolyline, others) now inherit from a shared
    GMSOverlay class
  ! GMSPolyline now has 'strokeWidth' and 'strokeColor' to match GMSPolygon,
    rather than 'width' and 'stroke'
  ! More helper methods on GMSCoordinateBounds, 'including' renamed to
    'includingCoordinate', added 'includingBounds'
  - Added GMSPolygon and GMSCircle overlays
  - A GMSMarker may be animated when added to a map
  - Overlay types may now be subclassed
  - GMSCameraUpdate to create camera update objects, including operations to
    set a camera that presents a specified GMSCoordinateBounds
  - GMSUISettings may be used to add a compass or My Location button (disabled
    by default)
  - Non-marker overlay types may be tapped (see GMSMapViewDelegate)
  - Default marker changed to the Google Maps for iPhone marker
  - Added markerImageWithColor: to create tinted versions of the default marker
  - GMSMapLayer, the CALayer subclass for GMSMapView, now supports modification
    of its camera properties, allowing for advanced animation effects

Resolved Issues:
  - visibleRegion now reports correctly sized region on Retina devices
  - Double-tap to zoom now centers around tapped point
  - Disabling pan via UISettings now prevents movement with zoom gestures
  - GMSPolyline performance is improved for large polylines
  - GMSMapView may be subclassed
  - My Location dot appears underneath markers
  - Performance improvements when using the My Location dot
  - Grayscale polylines now render correctly
  - Calling renderInContext: on the GMSMapView layer now renders correctly;
    this allows for snapshots and UI effects
  - The default behavior when a marker is tapped has been updated to also pan
    the camera to the marker's position
  - semaphore_wait_trap issue resolved

Version 1.1.2 - March 2013
==========================
Resolved Issues:
  ! Updated the SDK to use libc++ instead of libstdc++
  - Improved support for including a GMSMapView and GLKView in the same app

Version 1.1.1 - March 2013
==========================
Features:
  - Improved the messages that are logged to the console when a invalid key is
    used or a connection error occurs
  - Added multi-line snippet support for GMSMarker

Resolved Issues:
  - GMSMapView could return a nil camera
  - Multiple GMSMapView instances no longer 'camera crosstalk.'
  - The SDK contained unresolved external references
  - A GMSMarker with an empty title and snippet no longer shows an empty
    info window.

Version 1.1.0 - February 2013
=============================
Features:
  ! The points of a GMSPolyline (and GMSPolylineOptions) are now specified as
    a GMSPath and built via a GMSMutablePath, rather than addVertex: etc
  - GMSPolyline may now be specified as geodesic
  - animateToCameraPosition: method on GMSMapView
  - GMSProjection provides containsCoordinate: and visibleRegion helpers

Resolved Issues:
  - GMSCameraPosition and animateToLocation: now clamp/wrap latitude/longitude
    respectively; similarly, bearing is clamped to 0 <= bearing < 360
  - GMSGroundOverlay may be modified after creation
  - The points of a GMSPoyline may be modified after creation
  - GMSPolyline may cross the antimeridian
  - Resolved a marker sorting issue

Version 1.0.2 - January 2013
============================
Features:
  ! GMSCamera (struct) has been dropped in favor of GMSCameraPosition * (objc
    class), supports finer control of bearing and viewing angle
  - Added GMSUISettings to control gesture availability
  - Added GMSGroundOverlay/GMSGroundOverlayOptions for basic ground overlay
    support
  - Removed requirement to call startRendering/stopRendering
  - Support for adding GMSMapView as a custom UIView in Interface Builder
  - Improved texture memory handling

Resolved Issues:
  - Info windows now have highest tap priority
  - Selected markers are automatically brought to front
  - Polylines now render at constant size regardless of the zoom level

Version 1.0.1 - December 2012
=============================
Initial release alongside Google Maps for iOS.
Support for 3D maps, rotation, tilt, 3D buildings, markers, polylines,
satellite and terrain tiles, traffic data, and other features.


* Items denoted with an '!' may indicate a backwards incompatible change.
